[{"/Users/hudro/code/js-react-course/react_calc/src/index.js":"1","/Users/hudro/code/js-react-course/react_calc/src/App.js":"2","/Users/hudro/code/js-react-course/react_calc/src/modules/calc/Calc.js":"3"},{"size":253,"mtime":1674397259522,"results":"4","hashOfConfig":"5"},{"size":201,"mtime":1674397259523,"results":"6","hashOfConfig":"5"},{"size":3406,"mtime":1674397259523,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mw5c7q",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/hudro/code/js-react-course/react_calc/src/index.js",[],[],"/Users/hudro/code/js-react-course/react_calc/src/App.js",["19"],[],"import logo from './logo.svg';\n\nimport Calc from './modules/calc/Calc';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calc/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/hudro/code/js-react-course/react_calc/src/modules/calc/Calc.js",["20","21","22"],[],"import { useEffect } from 'react';\nimport { useState } from 'react'\nimport './Calc.scss'\n\nconst Calc = (props) => {\n    const [disp, setDisplay] = useState('0');\n    const [fz, setFontSize] = useState(26);\n\n    function changeDisplay(key) {\n        setDisplay(disp => {\n            const opers = ['*', '/', '%', '+', '-']\n            const last = disp.at(-1)\n\n            if ((disp === 'NaN' || disp.indexOf('nfinity') > -1) && key !== 'AC') {\n                return disp\n            }\n\n            if (opers.includes(key)) {\n                if (opers.includes(last)) {\n                    return disp\n                } else {\n                    if (disp === '0') {\n                        if (key === '-') {\n                            return key\n                        }\n                        return disp\n                    }\n                    return disp + key\n                }\n            }\n\n\n            if (key === '.') {\n                try {\n                    const _ = `${eval(disp + key)}` !== 'NaN'\n                    return disp + key\n                } catch {\n                    return disp\n                }\n            }\n\n            switch (key) {\n                case 'AC':\n                    return '0'\n                case '<':\n                    if (disp.length === 1) {\n                        return '0'\n                    }\n                    return `${disp.slice(0, disp.length - 1)}`\n                case '=':\n                    try {\n                        return `${eval(disp)}`\n                    } catch (error) {\n                        return `NaN`\n                    }\n                default:\n                    if (disp === '0') {\n                        return key\n                    }\n\n                    return disp + key\n            }\n        })\n    }\n\n    useEffect(() => {\n        setFontSize(fz => {\n            if (disp.length < 12) {\n                return 26\n            } else if (disp.length < 16) {\n                return 20\n            } else if (disp.length < 19) {\n                return 17\n            } else if (disp.length < 22) {\n                return 14\n            } else {\n                return 10\n            }\n\n\n        })\n    }, [disp])\n\n    const keyboard = [\n        'AC', '(', ')', '/',\n        '7', '8', '9', '*',\n        '4', '5', '6', '-',\n        '1', '2', '3', '+',\n        '0', '.', '<', '='\n    ]\n\n    const orange = ['/', '*', '-', '+', '=']\n\n    return (\n        <div className=\"calc-wrapper\">\n            <div className=\"screen\">\n                <div className=\"screen_wrapper\" style={{ fontSize: fz }} >{disp}</div>\n            </div>\n            <div className=\"grid-container\">\n                {\n                    keyboard.map((key, i) => {\n                        let classes = `grid-container-item item${i}`\n                        if (i < 3) {\n                            classes += ' ft'\n                        } else if (orange.includes(key)) {\n                            classes += ' lc'\n                        }\n                        return (\n                            <div key={i} className={classes}\n                                onClick={(e) => changeDisplay(e.target.innerText)}>\n                                {key}\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Calc;",{"ruleId":"23","severity":1,"message":"24","line":1,"column":8,"nodeType":"25","messageId":"26","endLine":1,"endColumn":12},{"ruleId":"23","severity":1,"message":"27","line":35,"column":27,"nodeType":"25","messageId":"26","endLine":35,"endColumn":28},{"ruleId":"28","severity":1,"message":"29","line":35,"column":34,"nodeType":"30","messageId":"31","endLine":35,"endColumn":38},{"ruleId":"28","severity":1,"message":"29","line":52,"column":35,"nodeType":"30","messageId":"31","endLine":52,"endColumn":39},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'_' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected"]